apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  namespace: argo
  name: backend-ci-template
spec:
  ttlstrategy:
    secondsAfterCompletion: 30
  podGC:
    strategy: OnWorkflowCompletion
  arguments:
    parameters:
      - name: branch
        value: main
      - name: artifactBuildArgs
        value: ""
      - name: appPath
        value: ""
      - name: dockerfilePath
        value: ""
      - name: dockerBuildArgs
        value: ""
      - name: tag
        value: ""
      - name: appName
        value: ""
      - name: shellBeforeBuild
        value: " "
      - name: shellAfterBuild
        value: " "
      - name: builderName
        value: 10.101.2.123/library/brand-maven-demo:v8
  entrypoint: main
  volumeClaimTemplates:
    - metadata:
        name: ci-artifact
        namespace: argo
      spec:
        accessModes: [ ReadWriteOnce ]
        storageClassName: rook-cephfs
        resources:
          requests:
            storage: 1Gi
  templates:
    - name: main
      dag:
        tasks:
          - name: clone
            template: clone
          - name: artifact-build
            template: artifact-build
            dependencies:
              - clone
          - name: image-build
            template: image-build
            dependencies:
              - artifact-build
    - name: clone
      container:
        env:
          - name: GITLAB_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: gitlab-access-token
                key: token
          - name: TZ
            value: Asia/Shanghai
        volumeMounts:
          - mountPath: /ci/code
            name: ci-artifact
            subPath: code
        image: 10.101.2.123/library/git:2.41.0
        workingDir: /ci
        command: [ sh, -euc ]
        args:
          - |
            cd code
            echo "git clone -v -b {{workflow.parameters.branch}} --single-branch --depth 1"
            git clone -v -b "{{workflow.parameters.branch}}" --single-branch --depth 1 http://wansheng:$GITLAB_ACCESS_TOKEN@10.101.1.50/{{workflow.parameters.appPath}}.git .
            cd ..
            mkdir dockerfile
            cd dockerfile
            echo "Get Dockerfile from devops-config"
            git clone -v -b main --single-branch --depth 1 http://wansheng:$GITLAB_ACCESS_TOKEN@10.101.1.50/base/devops-config.git .
            cp {{workflow.parameters.dockerfilePath}} ../code
            cd ..
            rm -rf dockerfile
    - name: artifact-build
      container:
        env:
          - name: TZ
            value: Asia/Shanghai
        volumeMounts:
          - mountPath: /ci
            name: ci-artifact
            subPath: code
        image: "{{workflow.parameters.builderName}}"
        workingDir: /ci
        command: [ sh, -euc ]
        args:
          - |
            [ -n "{{workflow.parameters.shellBeforeBuild}}" ] && echo "{{workflow.parameters.shellBeforeBuild}}" | sh
            {{workflow.parameters.artifactBuildArgs}}
            [ -n "{{workflow.parameters.shellAfterBuild}}" ] && echo "{{workflow.parameters.shellAfterBuild}}" | sh
#      outputs:
#        artifacts:
#          - name: maven-repository
#            path: /root/.m2
#            optional: true
#            s3:
#              key: "brand/maven/demo"
    - name: image-build
      container:
        env:
          - name: TZ
            value: Asia/Shanghai
        name: kaniko
        image: 10.101.2.123/library/kaniko-project/executor:latest
        args:
          - --dockerfile=Dockerfile
          - --context=dir:///ci
          - --destination=10.101.2.123/library/{{workflow.parameters.appName}}:{{workflow.parameters.tag}}
          - --skip-tls-verify=true
          - --skip-tls-verify-pull=true
          - --insecure=true
          - --insecure-pull=true
          - --insecure-registry=http://10.101.2.123
          - --build-arg={{workflow.parameters.dockerBuildArgs}}
        volumeMounts:
          - mountPath: /ci
            name: ci-artifact
            subPath: code
          - name: harbor-secret
            mountPath: /kaniko/.docker
  volumes:
    - name: harbor-secret
      secret:
        secretName: harbor-secret
        items:
          - key: .dockerconfigjson
            path: config.json