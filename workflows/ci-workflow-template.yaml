apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  namespace: argo
  name: maven-ci-template
  annotations:
    workflows.argoproj.io/description: |
      This workflows builds and tests Argo Workflows.

      It demonstrates:

      * Cache restore and store.
      * Publishing test reports.
spec:
  ttlstrategy:
    secondsAfterCompletion: 300
#  podGC:
#    strategy: OnWorkflowCompletion
  arguments:
    parameters:
      - name: branch
        value: master

  entrypoint: main

#  volumeClaimTemplates:
#    - metadata:
#        name: ci
#        namespace: argo
#      spec:
#        accessModes: [ ReadWriteOnce ]
#        storageClassName: openebs-hostpath
#        resources:
#          requests:
#            storage: 1Gi

  templates:
    - name: main
      dag:
        tasks:
          - name: clone
            template: clone
          - name: build
            template: build
            dependencies:
              - clone

    - name: clone
      container:
        env:
          - name: GITLAB_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: gitlab-access-token
                key: token
        volumeMounts:
          - mountPath: /app/code
            name: demo-mount
            subPath: code
        image: bitnami/git
        workingDir: /app
        command: [ sh, -euxc ]
        args:
          - |
            cd code
            git clone -v -b "{{workflow.parameters.branch}}" --single-branch --depth 1 http://wansheng:$GITLAB_ACCESS_TOKEN@10.101.1.50/base/basic_service/demo.git .
            cd ../dockerfile
            git clone -v -b main --single-branch --depth 1 http://wansheng:$GITLAB_ACCESS_TOKEN@10.101.1.50/base/devops-config.git .
            cp base/basic_service/demo/Dockerfile ../code
            cd ..
            rm -rf dockerfile

    - name: build
      container:
        name: kaniko
        image: 10.101.2.123/library/kaniko-project/executor:latest
        args:
          - --dockerfile=Dockerfile
          - --context=dir:///app
          - --destination=10.101.2.123/library/demo:v2.1
          - --skip-tls-verify=true
          - --skip-tls-verify-pull=true
          - --insecure=true
          - --insecure-pull=true
          - --insecure-registry=http://10.101.2.123
        volumeMounts:
          - mountPath: /app
            name: demo-mount
            subPath: code
          - name: harbor-creds
            mountPath: /kaniko/.docker
  volumes:
    - name: demo-mount
      persistentVolumeClaim:
        claimName: ci
    - name: harbor-creds
      secret:
        secretName: harbor-creds
        items:
          - key: .dockerconfigjson
            path: config.json